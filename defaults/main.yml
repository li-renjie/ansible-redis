---

## Installation
version: 5.0.4

download_dir: "{{ role_path }}/files"
download_filename: "redis-{{ version }}.tar.gz"
download_filepath: "{{ download_dir }}/{{ download_filename }}"
download_url: "http://download.redis.io/releases/{{ download_filename }}"

prefix_dir: "/usr/local"
install_dir: "{{ prefix_dir }}/redis"

conf_dir: "/data/redis-{{ redis_port }}/conf"
data_dir: "/data/redis-{{ redis_port }}/data"
logs_dir: "/data/redis-{{ redis_port }}/logs"
run_dir: "/data/redis-{{ redis_port }}/run"

redis_conf_file: "{{ conf_dir }}/redis-{{ redis_port }}.conf"

redis_user: redis
redis_group: redis

master_group: ''
replica_group: ''
#redis_master_list: "{{ groups[master_group] | map('extract', hostvars, ['ansible_default_ipv4', 'address']) |arraypermute( [':'] ) | arraypermute( [ redis_port ]) }}"
redis_master_host_list: "{{ groups[master_group] | map('extract', hostvars, ['ansible_default_ipv4', 'address']) | list }}"
redis_master_port_list: "{{ groups[master_group] | map('extract', hostvars, ['redis_port']) | list }}"
redis_master_list: "{{ redis_master_host_list | zip(redis_master_port_list) | map('join', ':') | join(' ')}}"


## Systemd
multi_instance: false
systemd_service_name: "redis-{{ redis_port }}"
systemd_service_type: "{{ 'forking' if redis_daemonize == 'yes' else 'simple' }}"
systemd_exec_start: "{{ install_dir }}/bin/redis-server {{ redis_conf_file }}"
systemd_daemon_user: "{{ redis_user }}"
systemd_daemon_group: "{{ redis_group }}"
systemd_working_dir: "{{ data_dir }}"


## Configuration
# Network options
redis_bind: 0.0.0.0
redis_protected_mode: "no"
redis_port: 6379
redis_tcp_backlog: 511
redis_timeout: 0
redis_tcp_keepalive: 300

# General configuration
redis_daemonize: "yes"
redis_supervised: "systemd"
redis_pidfile: "{{ run_dir }}/redis-{{ redis_port }}.pid"
redis_loglevel: notice
redis_logfile: "{{ logs_dir }}/redis-{{ redis_port }}.log"
redis_databases: 16

# Snapshotting configuration
redis_save:
  - 900 1
  - 300 10
  - 60 10000
redis_stop_writes_on_bgsave_error: "yes"
redis_rdbcompression: "yes"
redis_rdbchecksum: "yes"
redis_dbfilename: dump.rdb
redis_dir: "{{ data_dir }}"

# Replication configuration
redis_replicaof: false         # eg: "192.168.1.1 6379"
redis_masterauth: "{{ redis_password }}"
redis_replica_serve_stale_data: "yes"
redis_replica_read_only: "yes"
redis_repl_diskless_sync: "no"
redis_repl_diskless_sync_delay: 5
redis_repl_disable_tcp_nodelay: "no"
redis_repl_backlog_size: false
redis_replica_priority: 100
redis_min_replicas_to_write: 0
redis_min_replicas_max_lag: 10

# Security configuration
redis_password: false

# Clients configuration
redis_maxclients: 10000

# Memory Management configuration
redis_maxmemory: 0
redis_maxmemory_policy: noeviction

# Lazy Freeing configuration
redis_lazyfree_lazy_eviction: "no"
redis_lazyfree_lazy_expire: "no"
redis_lazyfree_lazy_server_del: "no"
redis_replica_lazy_flush: "no"

# Append Only Mode configuration
redis_appendonly: "no"
redis_appendfilename: "appendonly.aof"
redis_appendfsync: everysec
redis_no_appendfsync_on_rewrite: "no"
redis_auto_aof_rewrite_percentage: 100
redis_auto_aof_rewrite_min_size: 64mb
redis_aof_load_truncated: "yes"

# Lua Scripting configuration
redis_lua_time_limit: 5000

# Redis Cluster configuration
redis_cluster_enabled: "no"
redis_cluster_config_file: nodes-{{ redis_port }}.conf
redis_cluster_node_timeout: 15000

# Slow Log configuration
redis_slowlog_log_slower_than: 10000
redis_slowlog_max_len: 128

# Latency Monitor configuration
redis_latency_monitor_threshold: 0

# Event Notification configuration
redis_notify_keyspace_events: '""'

# Advanced Config configuration
redis_client_output_buffer_limit_normal: 0 0 0
redis_client_output_buffer_limit_replica: 256mb 64mb 60
redis_client_output_buffer_limit_pubsub: 32mb 8mb 60
